{"version":3,"sources":["webpack:///./demo1/demo1.jsx"],"names":[],"mappings":";;;;;;;;AAAA,KAAI,KAAK,GAAG,mBAAO,CAAC,cAAO,CAAC,CAAC;;AAE7B,oEAAmE;AACnE,kEAAiE;AACjE,2DAA0D;AAC1D,oEAAmE;AACnE,6CAA4C;AAC5C,KAAI,oCAAoC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAE,MAAM,EAAE,WAAW,CAAC;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;;KAEI,OAAO,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;OAClD,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC;MAC5B,CAAC;IACH;AACH,EAAC,CAAC,CAAC;;AAEH,KAAI,mBAAmB,GAAG,KAAK,CAAC,aAAa,CAAC,cAAc,CAAC,CAAC;AAC9D,kEAAiE;AACjE,kBAAiB;AACjB,GAAE;AACF,kEAAiE;AACjE,GAAE;AACF,kBAAiB;AACjB,GAAE;AACF,kFAAiF;;AAEjF,kEAAiE;AACjE,6DAA4D;AAC5D,MAAK,CAAC,MAAM;AACZ;;GAEE,mBAAmB,CAAC,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;GACtC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC;EACrC,CAAC","sourcesContent":["var React = require(\"react\");\n\n// Create a ReactComponent class with `React.createClass`. Pass the\n// class to `React.createFactory` to create a function that, when\n// called, creates a `ReactElement` object with that type.\n// React uses ReactElements to create a virtual DOM that determines\n// how the realm DOM should look and behave.\nvar HelloComponent = React.createClass({\n  // Every component needs a `render` function that returns a\n  // ReactNode. A ReactNode is either:\n  //\n  //  * a ReactElement\n  //  * a string (aka ReactText)\n  //  * a number (aka ReactText)\n  //  * an array of ReactNodes (aka ReactFragment)\n  //\n  // ReactElement factories that produce ReactElements that represent\n  // native HTML elements can be found on `React.DOM`.\n  render: function() {\n    // ReactElement factories take a hash of properties as their\n    // first argument and their children as remaining arguments.\n    // Here, we utilize `this.props`, which is an object\n    // containing the properties passed to this component.\n    //\n    // Properties should be treated as immutable--you should\n    // not try to change them from inside a component; they\n    // belong to whoever passed them to you!\n    return React.DOM.div(null, \"Hello \", this.props.name,\n      React.DOM.strong(null, \"!\")\n    );\n  }\n});\n\nvar HelloElementFactory = React.createFactory(HelloComponent);\n// ReactElement factories are just a convenience for creating new\n// ReactElements.\n//\n//     var element = HelloElementFactory(properties, children...)\n//\n// is the same as\n//\n//     var element = React.createElement(HelloComponent, properties, children...)\n\n// We can render a component into a DOM node with `React.render`,\n// which takes a ReactElement and a DOM node to render into.\nReact.render(\n  // We pass `\"Minerva\"` as the `name` property, which is\n  // used in `HelloComponent`'s `render` function.\n  HelloElementFactory({name: \"Minerva\"}),\n  document.getElementById(\"container\")\n);\n\n\n\n/** WEBPACK FOOTER **\n ** ./demo1/demo1.jsx\n **/"],"sourceRoot":"","file":"1.bundle.js"}