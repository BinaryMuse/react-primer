{"version":3,"sources":["webpack:///./demo2/demo2.jsx"],"names":[],"mappings":";;;;;;;;AAAA;;AAEA;AACA;AACA;;AAEA;;AAEA,gCAA+B;AAC/B;AACA;AACA,UAAS,IAAI;AACb;AACA;AACA,EAAC;;AAED;AACA;AACA,UAAS,gBAAgB;AACzB;AACA;;AAEA;AACA;AACA;AACA,uBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;AACA;AACA,iBAAgB,sBAAsB;AACtC;AACA","sourcesContent":["/** @jsx React.DOM */\n\n// JSX is an XML-like syntax that simplifies composing React\n// components. The @jsx pragma is required at the top of the\n// file to tell React where the default HTML components live.\n\nvar React = require(\"react\");\n\nvar Hello = React.createClass({displayName: 'Hello',\n  render: function() {\n    // Children are composed just like child XML/HTML nodes.\n    // `{...}` can be used to interpolate raw JavaScript.\n    return React.DOM.div(null, \"Hello \", this.props.name, React.DOM.strong(null, \"!\"));\n  }\n});\n\nReact.renderComponent(\n  // Properties look like HTML attributes.\n  Hello({name: \"Minerva\"}),\n  document.getElementById(\"container\")\n);\n\n// JSX compiles directly to JavaScript functions.\n// That is to say,\n//\n//   <Component prop={this.props.name}>\n//     <strong>Hello</strong>\n//   </Component>\n//\n// is exactly the same as\n//\n//   Component({prop: this.props.name},\n//     React.DOM.strong(null, \"Hello\")\n//   )\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./demo2/demo2.jsx\n ** module id = 3\n ** module chunks = 2\n **/"],"sourceRoot":"","file":"2.bundle.js"}